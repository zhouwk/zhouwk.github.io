<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[关于self和super的一道小题]]></title>
    <url>%2F2018%2F10%2F08%2F%E5%85%B3%E4%BA%8Eself%E5%92%8Csuper%E7%9A%84%E4%B8%80%E9%81%93%E5%B0%8F%E9%A2%98%2F</url>
    <content type="text"><![CDATA[现有基类Parent如下：12345678910#import &quot;Parent.h&quot;@implementation Parent- (void)test&#123; NSLog(@&quot;%@&quot;,[self class]); NSLog(@&quot;%@&quot;,[self superclass]); NSLog(@&quot;%@&quot;,[super class]);&#125;@end子类Son如下：1234567891011121314#import &quot;Son.h&quot;@implementation Son- (void)test&#123; // 第一组输出 NSLog(@&quot;%@&quot;,[self class]); NSLog(@&quot;%@&quot;,[self superclass]); NSLog(@&quot;%@&quot;,[super class]); // 第二组输出 [super test];&#125;@end访问aSon.test()，两组输出的内容是一样的Son、Parent、Son，[self supperClass]就是访问的父类名，而[self class]和[super class]他们的调用者都是aSon，super只是一个编译修饰符，不是指针，指向父类标志(使用父类的代码)，本质还是当前aSon调用Parent的方法，并不是用aParent对象调用Parent的方法，毕竟还没有直接[new Person]。]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Nginx错误记录(后续补充ing)]]></title>
    <url>%2F2018%2F09%2F13%2FNginx%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[html文件正常解析，而PHP文件没有解析直接下载去除nginx.conf中PHP文件的注释12345678root your_root_pathlocation ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # 默认是fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name 会导致file not found 的404问题 include fastcgi_params;&#125; 解析PHP文件出现错误the page you are looking for is currently unavailable这是php-fpm没有启动导致的，终端直接sudo php-fpm sudo-fpm报错找不到php-fpm.conf文件，详细信息/private/etc/php-fpm.conf: No such file or directory。在/private/etc/下应该有一个php-fpm.conf.default的文件，复制一份儿重命名为php-fpm.conf 在进过操作3之后再次sudo php-fpm，报错error_log (/usr/var/log/php-fpm.log): No such file or directory，是这个错误文件找不到。好吧，既然没有这个/usr/var/log/php-fpm.log文件(其实子目录var都不存在)，那就一层一层创建吧，但是发现/usr/目录下，用户(即使是root)是没有写权限的，网上有人建议重启MAC，然后command + R，终端csrutil disable，这样确实可以创建了，但是不建议这样做，MAC控制这个文件夹的权限肯定基于一定考虑的，且如果由于其他需要我们csrutil enable的时候，依然还是会报这个错误，毕竟又失去了写权限，所以修改配置文件hp-fpm.conf，把php-fpm.log改到其他目录下去，比如/etc/log/下 sudo php-fpm报错No pool defined. at least one pool section must be specified in config file，把/private/etc/php-fpm.d/www.conf.conf文件复制一份儿，重命名为www.conf，并保存在同级目录下 Nginx默认的项目根目录是html(完成路径是/usr/local/Cellar/nginx/1.15.3/html，其实是/usr/local/var/www的映像文件夹)，这时候html、php文件都可以正常解析访问，当我尝试修改项目更目录在桌面时，html文件正常访问，php文件出现错误file not found，后来尝试给项目根目录和其下的所有PHP文件设置777权限，还是不行。ls -l这样遍历了默认根目录所有的文件夹才发现每一级对other用户(owner group other)都有r-x权限，这样我就大概明白了，修改的新根目录每一级也必须如此，应该是other用户不拥有/User/zhouweike/Desktopr权限。后来尝试把项目根目录设置在/usr/local/PhpProjects/my_project_name下，查看新建的文件夹和文件权限，默认other用户都是有r权限的。注！这次只是通过解决问题的步骤来分析问题的原因，尚未深究、并不准确]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP_session]]></title>
    <url>%2F2018%2F08%2F10%2FPHP-session%2F</url>
    <content type="text"><![CDATA[Session的学习笔记 cookie的有效时间是setcookie设置的， session的有效期是gc.maxlifttime设置的，但是通过$_Cookie中的PHPSeesionID找到，这个默认有效期是0，即关闭浏览器这个cookie就没了，那也就是说对应的session也就没了。如果在session有效期内重新设置了session，那么它的有效期会重新开始，cookie 设置值应该不会重新开始有效期，设置它的有效时间 应该会重新生成一个新的有效时间 以最后设置session的时间为开始点， 60m之后删除整个session文件 123ini_set(&apos;session.gc_maxlifetime&apos;, 60); // 60秒失效ini_set(&apos;session.gc_divisor&apos;, 100); // 失效后触发gc_probability / gc_divisor 的概率删除session文件ini_set(&apos;session.gc_probability&apos;, 100);]]></content>
  </entry>
  <entry>
    <title><![CDATA[图片验证码]]></title>
    <url>%2F2018%2F08%2F08%2F%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%2F</url>
    <content type="text"><![CDATA[记录学习绘图章节写的一个图片二维码demo和其中的几个点图片验证码生成类12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273class VerificationCode &#123; var $width = 100; var $height = 30; var $code_length = 4; function generate() &#123; $code = $this-&gt;generateCode(); $this-&gt;drawCode($code); &#125; // 随机数 function generateCode() &#123; $upper_letter = range('A','Z'); $lower_letter = range('a','z'); $number = range(0, 9); $all = array_merge($upper_letter, $lower_letter, $number); shuffle($all); $str = ''; for ($i = 0; $i &lt; $this-&gt;code_length; $i ++) &#123; $str .= $all[$i]; &#125; return $str; &#125; // 完成绘画 function drawCode($code) &#123; $source = imagecreatetruecolor($this-&gt;width, $this-&gt;height); imagefill($source,0,0, $this-&gt;generateRandomColor($source)); // 干扰点 for ($i = 0; $i &lt; 100; $i ++) &#123; $dotsColor = $this-&gt;generateRandomColor($source); $x = mt_rand(0, $this-&gt;width); $y = mt_rand(0, $this-&gt;height); imagesetpixel($source, $x, $y, $dotsColor); &#125; // 干扰线条 for ($i = 0; $i &lt; 3; $i ++) &#123; $line_color = $this-&gt;generateRandomColor($source); $x1 = mt_rand(0, $this-&gt;width); $y1 = mt_rand(0, $this-&gt;height); $x2 = mt_rand(0, $this-&gt;width); $y2 = mt_rand(0, $this-&gt;height); imageline($source, $x1, $y1, $x2, $y2, $line_color); &#125; // 验证码内容 $margin_left = $this-&gt;width / $this-&gt;code_length; for ($i = 0; $i &lt; 4; $i ++) &#123; $element = $code[$i]; $margin = $margin_left * $i; $font_color = $this-&gt;generateRandomColor($source); imagettftext($source, 20, mt_rand(-30, 30), $margin, $this-&gt;height / 2 + 5, $font_color, 'ttfs/italic.ttf', $element); &#125; header('Content-Type:image/png'); imagepng($source); imagedestroy($source); &#125; // 随机色 function generateRandomColor($source) &#123; return imagecolorallocate($source, mt_rand(0,255), mt_rand(0,255), mt_rand(0, 255)); &#125;&#125;(new VerificationCode()) -&gt; generate(); 测试login.html123456&lt;form action="#" method="post"&gt; &lt;input type="text" name="username" placeholder="input your username"&gt; &lt;img src="VerificationCode.php"&gt; &lt;br&gt; &lt;input type="submit" value="提交"&gt;&lt;/form&gt; 记录其中的几个点： mt_rand($min, $max) 更为高效的生成随机刷，内部算法为Mersenne Twister 算法， 比rand($min, $max)(默认使用libc 随机数发生器)的效率快4倍 range ($start, $end, $step = 1) 创建一个包含该范围的数组 array_merge($arr1, $arr2 ….) 合并N个数组 使用session存储code进行校验 header(‘Content-Type:image/png’)之前不能有输出语句，否则图片会加载失败;不能赋值imagepng($source, $filename)的参数$filename ，否则图片加载失败 在颜色绘制之前使用imagecolortransparent($source, $color)函数设置颜色可以把对应颜色设置为透明 绘制文本的两种方式1234// 方式一 imagestring ($image, $font, $x, $y, $string, $color)// 方式二imagettftext ($image, $size, $angle, $x, $y, $color, $fontfile, $text) 方式一有调节字体大小的参数，但是似乎不起作用，方式二可以调节字体、字体大小、倾斜角度；另外这两个函数中$x的参数解释是一样的，即绘画的起始X轴位置，但是$y的解释是不同的，方式一中的$y 同 $x一样绘画的起始Y轴位置，方式二中的$y指的是首字符的基线baseline(不是文字底部距离画底部的距离)，并不是绘画的起始Y轴位置。 imagepng ($image, $filename = null, $quality = null, $filters = null)用于把PNG图片输出到浏览器或者保存在文件，参数filename为空，即是输出到浏览器，否则保存到文件系统。参数quality图片压缩系数(0 - 9, 0为不压缩)]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>图片验证码</tag>
        <tag>绘图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MAC配置虚拟主机]]></title>
    <url>%2F2018%2F08%2F03%2FMAC%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[因为在MAC下配置Apache的时候出现了挺多莫名的问题，所以做一个记录 MAC下配置相关的文件： 安装目录：/etc/apache2 域名：IP的对应文件：/etc/hosts Apache配置文件：/etc/apache2/httpd.conf 虚拟主机节点配置文件：/etc/apache2/extra/httpd-vhosts 默认根目录：/Library/WebServer/Documents 配置hosts文件客户端在浏览器里面输入域名的时候，有先在本机的此文件找对应的ip地址，如果找不到，去DNS找对应的ip地址，找得到的话就访问ip。1234127.0.0.1 localhost255.255.255.255 broadcasthost::1 localhost 0.0.0.0 account.jetbrains.com把127.0.0.1对应的localhost改成www.zwk.com 配置httpd.conf ServerRoot“/etc”： ServerRoot: The top of the directory tree under which the server’sconfiguration, error, and log files are kept. 包含服务器配置文件、错误文件、日志文件的目录，不要在后面追加/，比如/etc/ Listen:绑定IP、端口， Listen: Allows you to bind Apache to specific IP addresses and/or ports, instead of the default. See also the &lt;VirtualHost> directive 默认绑定123456&lt;IfDefine SERVER_APP_HAS_DEFAULT_PORTS&gt; Listen 8080&lt;/IfDefine&gt;&lt;IfDefine !SERVER_APP_HAS_DEFAULT_PORTS&gt; Listen 80&lt;/IfDefine&gt; 在不做其他处理的情况下，如果绑定80端口，访问的时候不需要在URL地址下拼接端口号，如果是其他端口则要拼接端口号，可以上网搜一下处理方式。遇到问题： 如果保留上述配置，或者注释掉上述配置，添加Listen 80(默认是80)，那么http://localhost 可以正常 访问，http://127.0.0.1/index.html 和 www.zwk.com/index.html 则会触发404 NOT FOUND错误，即使拼接80端口也是如此 注释掉上述配置，绑定非80断定，比如Listen 81，三种方式都能正常访问，但是访问的URL地址必须要拼接这个端口号 出现过访问交替成功/失败的情况(后来尝试好像是Safari的问题，Chrome 就是一直失败的，不会交替) LoadModule moduleName path: 加载功能模块，这是我一直搭建虚拟主机失败的最主要问题。 1234LoadModule authn_file_module libexec/apache2/mod_authn_file.so#LoadModule authn_dbm_module libexec/apache2/mod_authn_dbm.so#LoadModule authn_anon_module libexec/apache2/mod_authn_anon.so ........... 默认的是一个这样的模块列表，路径都是在libexec/apache2/下，但是实际的完整路径是/usr/libexec/apache2/moduleName，然后就一直报错说这里面的模块找不到。遇到问题:因为后来该了一些其他配置，导致访问的时候出现404问题，大致描述THE URL … is NOT FOUND ON THIS SERVER，按照网上的建议最终也没有修正，所以我把httpd.conf文件给复原了，这个时候，上面模块的路径恢复默认在libexec/apache2/下，但是这个时候却不报这个在libexec/apache2/module_name上找不到module_name的错误 ServerAdmin 出现错误的通知邮箱，难道说国内的邮箱不行吗，使用指令apachectl configtest检测到错误，终端描述说查看邮箱，但是邮箱并没有。 配置项目根目录12345678910111213141516171819202122232425262728293031323334353637383940DocumentRoot &quot;/Library/WebServer/Documents&quot;# 该目录的访问权限配置&lt;Directory &quot;/Library/WebServer/Documents&quot;&gt; # # Possible values for the Options directive are &quot;None&quot;, &quot;All&quot;, # or any combination of: # Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews # # Note that &quot;MultiViews&quot; must be named *explicitly* --- &quot;Options All&quot; # doesn&apos;t give it to you. # # The Options directive is both complicated and important. Please see # http://httpd.apache.org/docs/2.4/mod/core.html#options # for more information. # Options FollowSymLinks Multiviews MultiviewsMatch Any # # AllowOverride controls what directives may be placed in .htaccess files. # It can be &quot;All&quot;, &quot;None&quot;, or any combination of the keywords: # AllowOverride FileInfo AuthConfig Limit # AllowOverride None # # Controls who can get stuff from this server. # Require all granted # 替换了 Order allow,deny Allow from all，但是老的依然兼容 # 可以通过此处限定访问来源 # ----------网上大都如下配置，但是导致了403You don&apos;t have permission to access / on this server. #Options All #AllowOverride None #Order allow,deny #Allow from all &lt;/Directory&gt; 6.配置默认页面123&lt;IfModule dir_module&gt; DirectoryIndex index.html&lt;/IfModule&gt; 理论上说，在项目根目录下放一个index.html文件，走完该节的配置，应该能在浏览器访问http://www.zwk.com:81 访问到index.html 局域网内访问经过上节httpd.conf的配置已经可以本地访问该服务器，通过hosts文件配置本机访问的方式有两种http://www.zwk.com:81 和 http://localhost:81 。现在我们要在同局域网内的其他设备访问到该服务器，首先获取局域网的ip(不是直接百度本机ip的外网ip)，终端输入ifconfig，在终端的输出结果找inet(非inet6)对应的ip地址，在我的wifi环境下找到了三个ip，其中一个是localhost的127.0.0.1。把上面的www.zwk.com或者localhost换成另外两个ip的任意一个就是通局域网内的访问路径 很好用的apachectl configtest该终端指令可以检测出配置文件的语法错误(比如httpd.conf、httpd-vhosts)。模块路径错误导致的失败所提示的错误如下(注意：后期这个问题又没了)：httpd: Syntax error on line 67 of /private/etc/apache2/httpd.conf: Cannot load libexec/apache2/mod_authn_file.so into server: dlopen(/etc/libexec/apache2/mod_authn_file.so, 10): image not found 我们在故意制造一个问题，在根目录访问权限配置ServerRoot改成/etc2终端输入该命令，输出错误如下：httpd: Syntax error on line 31 of /private/etc/apache2/httpd.conf: ServerRoot must be a valid directory 配置httpd-vhosts文件上面的配置过程都是一台服务器上配置一个站点，通过配置虚拟主机文件httpd-vhosts可以配置多站点，现在我们要通过访问 http://localhost:81 和 http://localhost:82 进入到两个站点。首先我们在默认的根目录下/Library/WebServer/Documents 新建两个文件夹zwk和zwk2作为两个站点目录。 1. 在http.conf中监听81、82端口12Listen 81Listen 82 2.打开httpd.conf中关于httpd-vhost的注释12#Virtual hosts#Include /private/etc/apache2/extra/httpd-vhosts.conf 3.在httpd-vhost中如下配置12345678910111213141516171819202122232425262728293031&lt;VirtualHost *:81&gt; DocumentRoot &quot;/Library/WebServer/Documents/zwk1&quot; #ServerName servernameA #ErrorLog &quot;/private/var/log/apache2/dummy-host2.example.com-error_log&quot; #CustomLog &quot;/private/var/log/apache2/dummy-host2.example.com-access_log&quot; common &lt;Directory &quot;/Library/WebServer/Documents/zwk&quot;&gt; Options FollowSymLinks Multiviews MultiviewsMatch Any AllowOverride None Require all granted &lt;/Directory&gt;&lt;/VirtualHost&gt;&lt;VirtualHost *:82&gt; DocumentRoot &quot;/Library/WebServer/Documents/zwk2&quot; #ServerName servernameB #ErrorLog &quot;/private/var/log/apache2/dummy-host2.example.com-error_log&quot; #CustomLog &quot;/private/var/log/apache2/dummy-host2.example.com-access_log&quot; common &lt;Directory &quot;/Library/WebServer/Documents/qubic&quot;&gt; Options FollowSymLinks Multiviews MultiviewsMatch Any AllowOverride None Require all granted &lt;/Directory&gt;&lt;/VirtualHost&gt; 这样就完成多站点的配置，实际就是把httpd-vhost单站点的配置信息放到VirtualHost节点中进行多站点配置，除了Listen port的部分不能放到节点中(apachectl configtest提示错误)。 一个PHP文件解析的问题配置站点结束，尝试访问站点的内容，发现.html文件可以正常渲染，但是.php文件没有解析源代码直接展示在浏览器上，而且httpd.conf中关于PHP模块的注释已经去掉(这也是网上搜索这个问题得到的最多的解决方案)，最终在https://blog.csdn.net/beyondlpf/article/details/8075781找到了解决方案，如下：在IfModule mime_module节点下添加如下内容12AddType application/x-httpd-php .phpAddType application/x-httpd-php-source .phps 重启Apache ，ok 顺利解析]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>Apache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP文件操作笔记]]></title>
    <url>%2F2018%2F08%2F02%2FPHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[读w3c文件部分和一些博客之后，记录个人认为的可能比较常用的函数。 打开文件(创建)通过fopen($filename, $mode, $use_include_path = null, $context = null)打开文件，成功则返回文件句柄handle，$mode的值有如下4组： r/r+，分别对应只读/读写，文件指针在开头，如果文件存在，不会清空该文件(r+)，如文件不存在，不会创建该文件 w/w+，分别对应只写/读写，如果文件存在，则清空文件，如果文件不存在，则创建该文件，文件指针在开头 a/a+，分别对应只写/读写，如果文件存在，保留文件内容，文件指针在结尾，如果文件不存在，新建该文件 x/x+，分别对应创建只读文件/读写文件，如果文件已存在，则失败。 以上提到的如果文件不存在自动穿件的情况有一个前提：目标文件的所在父级目录要存在。 文件读取 fread ($handle, $length)读取至指定字节长度的内容 123$full_file_name = dirname(__FILE__) . '/1.txt';$handle = fopen($full_file_name, 'r');echo fread($handle, filesize($full_file_name)); file_get_contents ($filename, $use_include_path = false, $context = null, $offset = 0, $maxlen = null) {}从指定字节开始(默认0)读取指定字节长度的内容(默认全部)到一个字符串中。文件中的换行标识为\n(mac/linux是\n，window是\r\n)，而html的换是&lt;br&gt;，所以读取的内容换行没了。解决方案是使用&lt;pre&gt;原格式输出，或者把\n换成&lt;br&gt;(注意替换的时候，“\n”双引号，单引号不起作用)。如果两个字符之间有多个空格，则读取的内容中只有一个空格，替换字符串的“ ”(中间有一个空格)替换为&amp;nbsp;(使用频率最高，适用于小文件读取，大文件的话，参考下面优化的) fgets($handle)按行读取内容，每读取一行，文件指针下移一行，直到feof($handle) = true，空格不显示问题，参考2 fgetc($handle)按字节读取，每读取一个字节，文件指针下移一个字节，直到feof($handle) = true parse_ini_file($filename)项目中存在各种各样的配置文件(xxxconfig.ini)，其文件内容格式如下dbconfig.ini1234server=11.111.11.11username=zwkpsw=adminport=3306 该函数将如上内容的每一项包装成key=&gt;value，然后以数组形式返回。 一点可以优化的地方，未必每次都是需要一次性将整个文件读到内存进行操作，利用其中的读取范围的参数，一部分一部分读取处理。1234567$buffer = '';$size = 1024;while (!feof($handle)) &#123; $buffer .= fread($handle, $size); // 可以对buffer进行其他处理&#125;echo $buffer;拿到文件的读取结果之后，立刻关闭文件句柄fclose($handle) 文件写入 fwrite($handle,$string,$length = null)将字符串的指定字节长度(默认是全部)写入文件，要注意fopen创建的文件句柄是否有写的权限，该权限会不会导致已有内容被清空，文件的读写指针在默认在什么地方(比如r+会在开头写，替换原有字节长度(不是字符串度)的内容，比如一个汉字字符，替换掉原有的3个字符，或者3个字符替换原有的一个字符；而a+则是在最后追加，不产生覆盖行为)。注意在写入前面提到的换行符(其他特殊字符同样)的时候，不要使用‘\n’，单引号不发生转义，将原字符写入了文件，使用“\n” file_put_contents ($filename, $data, $flags = 0, $context = null)，使用频率最高，可以写字符串、数组、流三种数据，如果文件存在，默认先清空该文件，设置$flag=FILE_APPEND则是在最后追加，如果文件不存在，先创建该文件，前提是目标文件的所在父级目录要存在。 文件信息 fstat ($handle)获取文件的全部信息1234567891011121314151617181920212223242526272829Array( [0] =&gt; 16777220 [1] =&gt; 8601984257 [2] =&gt; 33188 [3] =&gt; 1 [4] =&gt; 501 [5] =&gt; 20 [6] =&gt; 0 [7] =&gt; 3 [8] =&gt; 1533189738 [9] =&gt; 1533189529 [10] =&gt; 1533189529 [11] =&gt; 4194304 [12] =&gt; 8 [dev] =&gt; 16777220 [ino] =&gt; 8601984257 [mode] =&gt; 33188 [nlink] =&gt; 1 [uid] =&gt; 501 [gid] =&gt; 20 [rdev] =&gt; 0 [size] =&gt; 3 // 字节数 [atime] =&gt; 1533189738 // 上次访问时间 [mtime] =&gt; 1533189529 // 上次修改时间 [ctime] =&gt; 1533189529 // 创建时间 [blksize] =&gt; 4194304 [blocks] =&gt; 8) 这些信息也有对应的单独函数，比如：filesize($file_name)、fileatime ($filename)、filemtime($filename)……. 文件删除unlink($filename)，返回删除结果 修改文件名rename($filepath, $newname)修改文件或者文件夹的名称，参数1必须是真是存在的文件路径，参数2是新名称，也可以是改名之后的路径，但是必须要和原来的路径保持一致(父级)，不能改到其他文件路径下。注意一点如果新文件名包含汉字，在window系统下(测试在mac下没这个问题，Linux估计也没问题)，文件系统GBK、GB2312(好像是GB2312)，而代码中的修改为UTF-8，为了防止文件名乱码，要把文件名把UTF-8编码转到这两种编码下iconv(&#39;utf-8&#39;,&#39;gbk&#39;, $new_file_name) &nbsp;&nbsp;&nbsp;&nbsp;老谭PHP教学中总结，没有window电脑，此处没有具体尝试 获取文件mime由于文件的后缀名是可该的，所以通过文件名的后缀部分来决定文件类型并不准确，可以使用如下几个函数 mime_content_type($path)直接获取 通过finfo相关函数获取1234$info = finfo_open(FILEINFO_MIME);$mime = finfo_file($info, 'view2.doc');echo $mime; // image/png; charset=binaryfclose($info); 对于图片文件，还可以使用getimagesize($filename)函数获取，其结果如下 123456789Array( [0] =&gt; 703 [1] =&gt; 157 [2] =&gt; 3 [3] =&gt; width=&quot;703&quot; height=&quot;157&quot; [bits] =&gt; 8 [mime] =&gt; image/png) 文件夹的操作 is_dir(file_path)用于判断是否为文件夹 mkdir($pathname, $mode = 0777, $recursive = false, $context = null)用于创建文件夹，文件夹已存在则创建失败， recursive参数用于控制是否为多级文件夹。 rmdir ($dirname, $context = null)删除文件夹，只能删除最后一级的空的文件夹，若最后一级文件夹有文件，则删除失败一次删除文件夹下所有文件的扩展12345678910111213141516171819202122function rrmove($filePath) &#123; if (is_dir($filePath)) &#123; $handle = opendir($filePath); while (false !== ($file_name = readdir($handle))) &#123; if ($file_name != '.' &amp;&amp; $file_name != '..') &#123; $file_full_path = $filePath . '/' . $file_name; echo $file_full_path; echo '&lt;hr&gt;'; if (is_dir($file_full_path)) &#123; rrmove($file_full_path); &#125; else &#123; unlink($file_full_path); &#125; &#125; &#125; closedir($handle); rmdir($filePath); &#125; else &#123; unlink($filePath); &#125;&#125; opendir($path)用于打开一个文件夹，成功返回一个文件句柄 readdir($handle)从文件句柄中读取文件，多次调用，返回文件名，读取所有文件后，返回false]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>文件操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[namespace笔记]]></title>
    <url>%2F2018%2F07%2F31%2Fnamespace%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[namespace的引入是为了解决项目中的重名问题(类、方法、变量等)，默认所有的访问都是在当前命名空间下的(如不设置命名空间，则是在全局命名空间下)，当产生冲突的时候，就会发生错误，比如File_A中有个test()函数，File_B中也有个test()函数，当把File_A和File_B引入到同一个File_C中的时候，访问test()方法就会出现编译错误，因为不知道要去访问那个test()函数，就像4个人都叫李四，并不知道那个是你找的李四。而给文件设置命名空间之后，我们就可以通过在限定的命名空间下找test()函数，就像找家主A的李四，或者家住B的李四，这样就解决了命名冲突问题。1.php1234namespace np_01;function testMethod() &#123; echo 'np_01&lt;hr&gt;'; &#125; 2.php1234567namespace np_02;require_once '1.php';function testMethod() &#123; echo 'np_02&lt;hr&gt;';&#125;testMethod(); // np_02\np_01\testMethod(); // np_01 3.php123456789101112/*function var_dump($var) &#123; echo $var . '&lt;hr&gt;';&#125;var_dump('aaaaa'); // 命名冲突*/namespace np_03;function var_dump($var) &#123; echo $var . '&lt;hr&gt;';&#125;var_dump('aaaaa'); // 默认访问当前命名空间np_03的var_dump\var_dump('aaaa'); // 前置 \ 访问全局命名空间下的var_dump PHP手册中名称解析规则 完全限定名称的类、方法、常量访问，只单纯按照命名空间解析，不拼接当前命名空间 在命名空间内部，访问非限定名称和非完全限定名称的类、方法、常量，会在前面拼接当前命名空间，然后按照规则3、4进行访问，且如果拼接之后的完整命名空间是new A\B\C\D()，那么它是等价于new \A\B\C\D()的 在命名空间内部(比如A\B)访问一个非限定名称的方法、常量，那么会先在当前命名空间访问，然后是全局命名空间，比如直接通过var_dump(‘aa’)访问系统函数(如果是非完全限定的，则不会去全局命名空间找，访问不到依然报错，比如\NP\np_02\var_dump()) 在命名空间内部(比如A\B)访问一个非限定和非完全限定的类，只会在拼接之后的命名空间中查找，比如new C，是A\B\C，new C\D,则是A\B\C\D，不会在全局命名空间下找，因此在命名空间中访问全局类如new \mysqli(‘localhost’, ‘zzzz’)必须使用完全限定名称\className()，防止拼接当前命名空间。 一点小细节：定义命名空间的前面，别写其他代码。命名空间可以像文件路径一样细化为多层子命名空间，把1.php的命名空间修改为NP\np_01，把2.php的命名空间修改为NP\np_02，把3.php并设置其命名空间为NP。使用use关键字引入命名空间，访问命名空间下的不同内容，修饰关键字也不同，类是use 命名空间\类型，函数是use function 命名空间\函数名，常量是use const 命名空间\常量名 AS关键字设置别名。123456789101112131415161718192021//1. 不使用use关键字/*require_once '1.php';\NP\np_01\testMethod();*/// 2.使用use关键字/*namespace NP\np_04;use function NP\np_01\testMethod; // 不使用AS别名，则以最后部分为别名require_once '1.php';testMethod();*/// 3.use + AS 别名/*namespace NP\np_04;use function NP\np_01\testMethod AS zwk;require_once '1.php';zwk();*/ 一篇比较好的PHP命名空间与自动加载机制介绍的文章]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>namespace</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ESC_centOS下file_put_contents失败]]></title>
    <url>%2F2018%2F07%2F20%2FESC-centOS%E4%B8%8Bfile-put-contents%E5%A4%B1%E8%B4%A5%2F</url>
    <content type="text"><![CDATA[问题出现环境：ECS + centOS + LAMP写微信小程序后台的时候，需要把一些数据存储到一个文件中管理(file_put_contents)，在本地测试的时候一切ok，但是代码上传到阿里云服务器的时候，这个时候就不行了，数据无法写入文件中。百度发现是权限问题，在阿里云后台远程连接虚拟服务器，终端找到该文件，# chmod 777 文件名一切ok。开发过程中发现，分配父级文件夹777权限，其子文件并不会有777权限。其实中间也是一直在做一件蠢事儿，在本地写完代码之后，图省事直接把整个项目扔进云服务器了，导致之前的项目被覆盖了，然后这个授权问题重复多次出现。因为这是第一次算是比较认真的写PHP后台，所以很多思维都不到位，比如这样做会把生产环境下记录的文件也给覆盖掉，这就罪过大了。]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>file_put_contents()</tag>
        <tag>ECS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云Error503]]></title>
    <url>%2F2018%2F07%2F03%2F%E9%98%BF%E9%87%8C%E4%BA%91Error503%2F</url>
    <content type="text"><![CDATA[12345678&#123; &quot;code&quot;: 0, &quot;data&quot;: &#123; &quot;token&quot;: &quot;d1a7a956a63c14bb0d92d4208fd256fc&quot;, &quot;expireTime&quot;: 1534648353 &#125;, &quot;message&quot;: &quot;ok&quot;&#125; 在阿里云申请集成LAMP环境的centOS主机，在配置好相应的安全组、安全规则之后，通过浏览器IP地址访问项目发布目录下的index.php时候，出现了503错误，错误信息如下Service Unavailable The server is temporarily unable to service your request due to maintenance downtime or capacity problems. Please try again later. 但是目录下的html文件是可以正常通过IP地址访问的，通过提交阿里云工单得知，是ECS服务器的php-fpm进程未开启导致不能解析PHP文件。 ssh远程登录ESC服务器后，输入指令/etc/init.d/php-fpm start即可。当然也可以通过指令/etc/init.d/php-fpm stop来触发这个问题。 导致该问题的可能原因是做了如下操作：ECS主机的LAMP的PHP版本有些低(5.6)，于是删除了PHP5.6，然后重新安装了7.1，可能删除操作导致了php-fpm被关了。 PHP7.1步骤如下：123456789101112131415161718# 查看当前PHP版本php -v# 检查当前PHP的安装包yum list installed | grep php# 删除当前版本的PHPyum remove php*#添加第三方yum源，我们选择webtatic库rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm# 查看yum源是否有PHP7.1的安装包yum list php71yum install -y php71w-fpm php71w-opcache php71w-cli php71w-gd php71w-imap php71w-mysqlnd php71w-mbstring php71w-mcrypt php71w-pdo php71w-pecl-apcu php71w-pecl-mongodb php71w-pecl-redis php71w-pgsql php71w-xml php71w-xmlrpc php71w-devel mod_php71w 参考链接：CentOs7.x下升级PHP版本 另附：非镜像版安装LAMP]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>阿里云虚拟主机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHPStorm_[08S01]]]></title>
    <url>%2F2018%2F06%2F28%2FPHPStorm-08S01%2F</url>
    <content type="text"><![CDATA[使用MAMP + PHPStorm搭建PHP开发环境，在PHPStrom连接MySql数据库的时候出现了[08S01]错误码，错误信息是Communications link failure，详细信息如下图看描述信息是连接不上MySql，但是MAMP中已经开启了MySql服务，在PHPStorm的数据配置比如端口号、数据库账号、数据库密码都是对的，而且在PHPMYadmin中是可以正常操作MySQL的，也可以使用PHP代码连接操作MySQL。由于本职不是后台PHP开发，临时抽调过来的，所以遇到错误还是挺懵的。于是上网搜了一通，但是网上大多数对这个错误的描述是：已经在跑的数据库，每隔8小时会出现这个错误，是使用连接池出现的，短连接很难出现，(对连接池、短连接的概念目前并不是很清晰)。MySQL的服务器如果连接空闲8个小时(28800秒)就会任务这个连接已经不用失效了，然后主动断开，所以解决方案是打开MySQL配置文件my.ini设置wait_timeout一个更长的时间段。虽然错误码和错误信息和我碰到的都一样，但是很明显情况不同，我这是一直连接不上。后来在MAMP中MySQL的配置项，找到了一个Allow network access mysql的选项，允许网络远程访问，尝试勾选，并且重启服务器，再次尝试在PHPStorm中连接数据库，竟然okay了。但是仍然有一点想不通，很明显这个选项是允许网络远程访问数据库的，但是我在PHPStorm的连接方式是localhost本地的，直观感觉上不应该和这个选项有关系。]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHPStorm</tag>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ReactiveCocoa_Signal]]></title>
    <url>%2F2018%2F06%2F25%2FReactiveCocoa-Signal%2F</url>
    <content type="text"><![CDATA[需要重新整理 本文是对Reactive_event初步归纳记录，理解较浅、可能有误、后续完善。 Signal在RAC中用来表示正在进行中的事件流，比如通知、用户输入等等，使用者可以注册对事件流的观察成为观察者，观察事件流中所包含的事件。随着任务的进行，这些任务的状态或结果被封装Event类型，并发送到事件流中，然后事件流再把这些事件推送给所有的观察者。事件流是创造者驱动、基于推送的，推送就是前面提到的把事件推送到所有的观察者，创造者即是Signal Producer，简单理解它就是用来创造、改变事件流的，后续会有描述。所有的观察者只能观察，并不能对数据流产生副作用，且一个事件流所有的观察者所接收到的事件都是一样的。Signal提供了两种创建方式Sigal.pip()和Signal.init(),test112345func text1() &#123; let (signal, observe) = Signal&lt;String, NoError&gt;.pipe() &#125; RAC对观察者Observers的定义是：事件流推送事件的任意对象，这些对象正在等待接受、或者可以等待接受事件流所推送的事件，可以通过Signal.observe或者SignalProducer.start隐式创建一个观察者。]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ReactiveCocoa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ReactiveCocoa_Event]]></title>
    <url>%2F2018%2F06%2F24%2FReactiveCocoa-Event%2F</url>
    <content type="text"><![CDATA[需要重新整理 Event是RAC中事件流所传输的对象，有如下几种：value Event： 值事件，我们可以通过值事件来告诉观察者产生的数据，比如从服务器请求的数据、进度、模型数组等等。我们再创建事件流的时候会限定其类型，所以这些值事件的value必须同类型。failure Event：失败事件，我们可以通过失败事件来告诉观察者发生了什么错误，通过.error参数来具体描述这个错误，用代码来简单实现一个socket异常断开的失败事件:123let (signal, observe) = Signal&lt;String, NSError&gt;.pipe()let error = NSError(domain: &quot;domain&quot;, code: -1, userInfo: [&quot;log&quot;: &quot;socket disconnected from host&quot;])observe.send(error: error)RAC对失败事件的处理和普通的异常一样，一旦发生，后续的任何事件就都不会被发送到事件流中，所以谨慎使用。如果希望即使发生错误后续的事件还能正常发送，那么建议使用合适的值事件来间接描述这个错误。如果不允许发生失败事件，那么我们再在创建事件流的时候使用NoError类型，这样就保证了事件流中不会存在失败事件。completed Event：成功事件，我们可以发送一个成功事件来告诉观察者操作已经成功完成比如下载完成，或者这个数据流被正常终止。成功事件发生之后，后续的事件将不会被发送到事件流中推送给观察者，所以确保与此有关的所有操作都成功之后在发送成功事件。interrupted Event：中断事件，用于取消已经开始的操作，既非成功、也非失败。 事件流有若干个值事件和最多一个终止事件组组成。]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>ReactiveCocoa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UITextField]]></title>
    <url>%2F2018%2F06%2F15%2FUITextField%2F</url>
    <content type="text"><![CDATA[123override func textRect(forBounds bounds: CGRect) -&gt; CGRect &#123; return bounds.insetBy(dx: 10, dy: 10)&#125; 重写该方法用于调整文本的显示区域(非编辑状态)，参数中bounds的解释是The bounding rectangle of the receiver.但是并不是很清楚和谁有关系，测试案例中输出结果有时候为文本框的.bounds,更多是(0, 0, 100, 100)重写该方法之后，会影响到文本框在编辑状态下的展现形式所以编辑状态下的本文区域也要做同样的设置123override func editingRect(forBounds bounds: CGRect) -&gt; CGRect &#123; return bounds.insetBy(dx: 10, dy: 10)&#125;同时，也可以重写其他如下方法来调节相应内容的显示区域12345678910- (CGRect)borderRectForBounds:(CGRect)bounds;- (CGRect)textRectForBounds:(CGRect)bounds;- (CGRect)placeholderRectForBounds:(CGRect)bounds;- (CGRect)editingRectForBounds:(CGRect)bounds;- (CGRect)clearButtonRectForBounds:(CGRect)bounds;- (CGRect)leftViewRectForBounds:(CGRect)bounds;- (CGRect)rightViewRectForBounds:(CGRect)bounds;- (void)drawTextInRect:(CGRect)rect;- (void)drawPlaceholderInRect:(CGRect)rect; CGRect.insertBy(dx, dy) 相对一个CGRect调节偏移，从而形成一个新的CGRect12345let rect = CGRect(x: 10, y: 10, width: 100, height: 100)print(rect.insetBy(dx: 10, dy: 10))//(20.0, 20.0, 80.0, 80.0)print(rect.insetBy(dx: -10, dy: -10))//(0.0, 0.0, 120.0, 120.0)]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码量统计]]></title>
    <url>%2F2018%2F05%2F28%2F%E4%BB%A3%E7%A0%81%E9%87%8F%E7%BB%9F%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[之前有过一次面试被问到：“项目中大约有多少类和多少行代码”，当时心里就…了，这怎么回答，因为着实估算不出来啊，而且其他人负责的模块更不好估算啊。所以后来上网特意找了下相关的终端命令。1234// 统计文件夹下文件的数量，包括子文件夹下的ls -lR|grep &quot;^-&quot;|wc -l // 统计项目中指定文件后缀名的代码行数(这个也是不准确的，因为包括了空行)find . &quot;(&quot; -name &quot;*.m&quot; -or -name &quot;*.mm&quot; -or -name &quot;*.cpp&quot; -or -name &quot;*.h&quot; -or -name &quot;*.rss&quot; -or -name &quot;*.xib&quot; &quot;)&quot; -print | xargs wc -l写软件著作权申请书的时候也会用到这两个终端命令，因为填写这两个数据。]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>代码量统计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[国际化]]></title>
    <url>%2F2018%2F05%2F25%2F%E5%9B%BD%E9%99%85%E5%8C%96%2F</url>
    <content type="text"><![CDATA[国际化本身并不是一个复杂的东西，所以只会简要介绍其中的一些点。 国际化基础配置还是要简单介绍一下项目国际化需要的配置以及XIB和代码中字符串的国际化。首先我们要在PROJECT-&gt;Localizations中添加所要支持的语言，同时会有自动弹框选中需要国际化的XIB文件。 | 完成之后，在相应的XIB文件locallzation配置中，选择需要支持的语言，xcode会在XIB文件下生成对应的国际化文件，内容格式(文本控件ID.txt = &quot;该语言下的文字&quot;;)XIB国际化有一个关于更新内容的问题会在XIB国际化脚本中介绍对于代码中字符串国际化，我们需要新建一个字符文件,command + n,在弹出的选择面板中搜索string，选中图中编辑的文件模板，并命名Localizable.strings接下来的操作和上述XIB的类似，在文件配置中选择国际化需要支持的语言，同时会为该文件自动生成相应语言的语言文件(Localizable.strings(对应语言))，文件内容为(需要国际化的文字 = &quot;该语言下的文字&quot;;)文字key就是代码中的NSLocalizedString(key, comment: “”)同样也面临一个更新繁琐的问题会在genStrings的使用中介绍 XIB国际化脚本一个项目的实现不可能是一步到位的，必然会对XIB进行多次修改，那么问题就来了： 如果新增/删除一个Label，xcode并不会自动更新该XIB对应的国际化文件，我们为了更新这个Label的国际化，方式①在XIB的配置界面中Localization中取消所有的语言选中，再重新勾选，使XIB重新进行国际化；方式②以sourceCode的方式打开这个XIB，找到个Label的id，手动增加(id.text = &quot;该语言下的文字&quot;)或者删除这个Label的国际化信息。难道每次更新XIB有关文本控件的时候，都要进行这个操作，显然这是很恶心的。 接上，如果选择了方式①，重新勾选该XIB支持的语言之后，会有一个弹框提示你是使用之前的国际化文件还是替换掉国际化文件, 如果勾选了Use File，那么国际化文件还是得不到更新，那只能选择Replace File，但是你会发现，这个操作会把之前已经国际化好的内容给干掉，再次被坑。 为了避免上面提到的问题，有人给出了一个XIB自动国际化的脚本AutoGenStrings，在项目的Build Phases-&gt;New Run Script Phase配置脚本路径好处： 在XIB中添加UILabel，编译之后，会自动在添加其对应的id.text = &quot;等待国际化的文字&quot; 在XIB中删除UIlabel，编译之后，会自动注释掉其对应的id.text = &quot;该语言下的文字&quot; 是增量修改，并不会覆盖之前已经国际化好的内容 提供时间日志，虽然没什么用 genStrings的使用在前面已经简单介绍了代码中字符串的国际化,但是如果我们每次在代码中增加/删除NSLocalizedString(key, comment: &quot;&quot;)，就要到Localizable.strings(对应语言)文件中去添加/删除相应的&quot;key&quot; = &quot;该语言下的文字&quot;;，也是相当恶心的。终端genStringsd指令的作用就是遍历项目中NSLocalizedString(&quot;key&quot;, comment: &quot;&quot;)字符串，并且用遍历的数据覆盖掉Localizable.strings(对应语言)文件，不足之处就不能增量修改，而是覆盖重写，之前已经国际化好的内容会被覆盖掉。终端命令的使用方式，到项目的根目录下， swift项目终端输入1find ./ -name &quot;*.swift&quot; -print0 | xargs -0 genstrings -o en.lproj en.lproj这是英语文件，我们在配置项目语言的时候可以看到每个语言的缩写，从而生成其他的语言文件 OC项目终端输入1find ./ -name *.m -print0 | xargs -0 genstrings -o en.lproj en.lproj解释同上。 复杂字符串的国际化对于一些包含可变内容的字符串就不能使用NSLocalizedString(&quot;key&quot;, comment: &quot;&quot;)的方式了。看一下和手机系统当前语言相关的两个API。API-11Bundle.main.preferredLocalizationsa subset of this bundle’s localizations, re-ordered into the preferred order for this process’s current execution environment; the main bundle’s preferred localizations indicate the language (of text) the user is most likely seeing in the UI BundleAPI解释从解释中可以看出它是APP本地化的一个子集，并且根据偏好语言列表重新排序。最有可能(不是100%)指示出APP要显示的语言，项目中也是用该API也进行包含可变子字符串的国际化。API-21NSLocale.preferredLanguages An ordered list of the user’s preferred languages. NSLocalAPI解释它所指示的是手机中的用户偏好语言列表，每一个元素为语言-地区,比如设置语言法语，地区中国即是fr-CN实际中，也有很多人使用该它就是当前语言的判断，但是这是错误的，即使你看到了正确的结果，也是因为没有相应情况的测试用例。我们手机上设置当前语言的时候，或者把偏好语言列表进行排序的时候，手机当前语言一定是它所返回列表中的第一个语言信息，那为什么不能根据它来进行国际化呢？假如我们APP支持的语言为中文、英文，我们把手机当前语言的语言设置为法语，可以打印他们的返回值如下：1234print(Bundle.main.preferredLocalizations)//["en"]print(NSLocale.preferredLanguages)//["fr-CN", "en-CN", "zh-Hans-CN"]从结果看，他们的差别就很明显了，因为APP并不支持法语，API-1并没有包含法语，那为什么是英文呢？在前面提到了API-1不仅和本地化有关，还会根据偏好语言列表进行排序，列表中APP支持的第一语言就是英文了，而API-2就只是用户偏好语言列表，和APP无关。如果我们把APP支持的语言设置为中文、英文、法语，那打印结果如下：1234print(Bundle.main.preferredLocalizations)//["fr"]print(NSLocale.preferredLanguages)//["fr-CN", "en-CN", "zh-Hans-CN"]这就是前面提到缺少的测试用例了。 图片的国际化图片的国际化有两种方式方式一是和XIB和.string文件国际化一样，在侧边栏选择需要支持的语言，然后到项目中语言.lproj的文件夹中放该语言下的图片，但是图片就不能放到asset中了，这也是缺点，失去了asset对该图片的优化处理，而且比较繁琐，要多次到语言.lproj文件夹中替换，同时2x、3x还要同样处理推荐方式二:使用复杂字符串的国际化判断当前语言，UIimage(named: &quot;语言图片.png&quot;) Info.plist的国际化同代码中字符串国际化一样，新建一个__.string文件，然后在文件侧边栏选择需要支持的语言，同样会自动生成相应的__.string(语言)的国际化文件，以Source code的方式打开Info.plist文件把属性名粘贴出来，添加到国际化文件中完成国际化1CFBundleName = &quot;其他语言下的名字&quot;;]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>国际化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[widget]]></title>
    <url>%2F2018%2F05%2F24%2Fwidget%2F</url>
    <content type="text"><![CDATA[实际上这并不是我首次在项目中使用到widget，先后在两个项目中涉及到widget，首次使用应该是16年的项目中。说来有些惭愧，虽然已经在两个项目中使用widget，但是除了业务逻辑，针对widget的逻辑(基本是UI逻辑)都只是简单的粘贴复制，并没有对其中的相关API进行仔细分析，所以当时为了调节和需求对应的效果，盲目的模仿一些文章调节参数。当时碰到的比较棘手的问题算只有两个： iOS9 -&gt; iOS10： 因为在iOS10之后，widget需要重新进行适配 iOS10-&gt; Now: 折叠/展开按钮的状态控制。 首先还是要提一下自己的一个关于widget生命周期的认知错误，挺长一段时间我都认为，widget在拉下来的时候并不会都执行viewDidLoad(),而是有点类似UITabBarController&#39;chilerViewContoller,只创建一次，后面每次点击item都是重新appear。基于这样的错误思维，实际开发中，基本没有在viewDidLoad()中加入什么逻辑，而是把相应的逻辑都转移到了viewWillAppear()中。 在iOS10之后，苹果引入新的API来管理控制widgetUI，起决定作用的是一个枚举(NCWidgetDisplayMode)和对协议(NCWidgetProviding)的补充。 NCWidgetDisplayMode1234567@available(iOS 10.0, *)public enum NCWidgetDisplayMode : Int &#123; case compact // Fixed height case expanded // Variable height&#125; 与其对应的是NSExtensionContext下的两个扩展属性widgetLargestAvailableDisplayMode、widgetActiveDisplayMode widgetLargestAvailableDisplayMode(ios10)先看下官方的部分使用解释:Widgets can change the largest display mode they make available from the default ‘NCWidgetDisplayModeCompact’ by messaging the extension context.Modifying this property more than once during the lifetime of the widget (perhaps due to changes in the amount of available content) is supported. 粗暴理解下，该属性用于控制widget的最大显示模式，并且可以根据显示内容的改变它的值。默认= .compact，widget处于一种固定高度的状态110pt(并未在所有机型上验证)，且无法修改，widget会隐藏展开/折叠按钮。于是就引出了上面提到的第一个问题，在&lt;= iOS9的时候，widget高度都是直接使用preferredContentSize控制，但是用户升级到&gt;= iOS10之后，preferredContentSize便无法控制它的高度，一直处于110pt状态，导致内容无法全部显示。当= .expanded，此时widget处于高度可变的状态，且会显示展开/折叠按钮，但是按钮当前的状态和它无关(这也是我曾经的一个误区)。注意一点：如果手动设置该属性，必须要在后面设置相应状态的preferredContentSize属性，否则会出现异常的结果，见遇到的坑所以可以根据需求进行相应的设置，如果高度固定，且只有110pt，那使用默认就好，否则只能设置.expanded。假设场景：最大会在widget中显示四行四列16个model的方格布局，在从服务器中拿到数据之后，如果不超过4个model，直接设置.compact隐藏掉展开/折叠按钮，多于4个model的时候，设置.expanded显示展开/折叠按钮。 widgetActiveDisplayMode(iOS10)这是个read-only属性，对应于widget所处于的状态和展开/折叠按钮的状态，= .compactwidget处于已折叠状态，按钮显示展开，= .expandedwidget处于已展开的状态，按钮显示折叠。从现象上看它的值(状态)是被手机单独记录下来的，并不是每次拉下来widget都是回到默认值(事实上它也没有默认值)，而是保留了上次点击展开/折叠按钮所触发的状态改变假设场景：项目中可以在请求到服务器model后，根据该属性的值来决定要显示多少个model，设置多大的preferredContentSize,= .compact显示部分，= .expanded显示全部。但是如果处理不当，widget的状态可能会和你设置的相应状态下的preferredContentSize不匹配，见遇到的坑 NCWidgetProviding先看一下该协议在针对&gt;= iOS10进行的修改：废弃了下面的接口： >=iOS10不会再被调用12 optional public func widgetMarginInsets(forProposedMarginInsets defaultMarginInsets: UIEdgeInsets) -&gt; UIEdgeInsets &lt;iOS10widget是默认有内容margin调节的。 补充了新的接口1234// If implemented, called when the active display mode changes.// The widget may wish to change its preferredContentSize to better accommodate the new display mode.@available(iOS 10.0, *)optional public func widgetActiveDisplayModeDidChange(_ activeDisplayMode: NCWidgetDisplayMode, withMaximumSize maxSize: CGSize)这就是点击展开/折叠按钮产生的回调，根据新的activeDisplayMode设置preferredContentSize 遇到的坑 点击展开/折叠按钮触发回调 123456if activeDisplayMode == .compact &#123; preferredContentSize = CGSize(width: viewWidth, height: 110) &#125; else &#123; setFullSize() &#125;&#125; 我们已经知道在= .compact模式下，widget的高度是定死110pt的，但是在回调中第二行的代码不可少，缺少的话会产生一种情况：从GIF中看出，即使没有第二行代码，第一次点击折叠的时候，widget正常折叠会110pt，但是接下来的点击展开/折叠，虽然activeDisplayMode在切换，但是preferredContentSize已经失效。 和情况1相似，只不过触发点不同。假设场景：widget最多显示四行四列16个model，每四个model widget增加一个高度，不超过四个model的时候隐藏展开/折叠按钮，否则显示出来。从服务请求到model数据之后，设置widgetLargestAvailableDisplayMode控制按钮的显示，但是一定要在之后设置响应状态的preferredContentSize，且最好保持这个先后顺序,开发中偶然没有按照这个先后顺序，出现了preferredContentSize无效的情况。 1-5和6-10顺序12345678910if dataSource.count &lt;= 4 &#123; extensionContext?.widgetLargestAvailableDisplayMode = .compact&#125; else &#123; extensionContext?.widgetLargestAvailableDisplayMode = .expanded&#125;if extensionContext?.widgetActiveDisplayMode == .compact &#123; preferredContentSize = CGSize(width: viewWidth, height: 110)&#125; else &#123; preferredContentSize = CGSize(width: viewWidth, height: 110 * rowCount)&#125; Widget也是一个单独的APP，但是无法进行debug，设置debugpoint，如果出现bug的话会显示无法加载，目前能想到的debug方式是添加UIlabel显示log。 写widget的时候，看了很多的文章，但是基本上都是在viewDidLoad()中设置了extensionContext?.widgetLargestAvailableDisplayMode = .expanded，其实是没有必要的，并不是必须这样的，还是要根据需求走，在合适的时机设置extensionContext?.widgetLargestAvailableDisplayMode合适的值，控制展开/折叠按钮的显示隐藏状态。 在stackoverflow看到有人提出这样问题：在不显示展开/折叠按钮的情况下，给widget设置另外一个高度(非默认110pt)的，并且提供了一个已经实现这种逻辑的APP截图，我也非常好奇怎么实现的。]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>widget</tag>
      </tags>
  </entry>
</search>
